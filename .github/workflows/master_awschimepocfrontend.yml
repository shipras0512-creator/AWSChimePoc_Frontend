name: Build and Deploy

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: npm install
      - name: Build project
        run: npm run build
        env:
          CI: false   # üëà disables treating warnings as errors
This way your build won‚Äôt fail just because of warnings.

‚ö†Ô∏è Important: Only do this if you‚Äôre okay with ignoring warnings in CI. Otherwise, it‚Äôs safer to fix the warnings.

Do you want me to also show you how to auto-detect and fail only on errors (but not warnings), so you don‚Äôt have to disable CI completely?

You said:
# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - AWSChimePOCFrontend

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '22.x'

      - name: npm install, build, and test
        run: |
          npm install
          npm run build --if-present
         
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: .

  deploy:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app
      
      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'AWSChimePOCFrontend'
          slot-name: 'Production'
          package: .

         modify accordinlgly
ChatGPT said:
Perfect ‚Äî thanks for sharing your GitHub Actions workflow üëå

Right now your build job runs npm run build under GitHub CI, so process.env.CI=true, which causes your React build to fail on warnings.

You can fix this by explicitly setting CI: false in the build step.

Here‚Äôs a modified version of your workflow:

# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - AWSChimePOCFrontend

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '22.x'

      - name: npm install, build, and test
        run: |
          npm install
          npm run build --if-present
        env:
          CI: false   # üëà prevents warnings from failing the build
         
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: .

  deploy:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app
      
      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'AWSChimePOCFrontend'
          slot-name: 'Production'

          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_78F75D9C2E444F188309F49B1356DADF }}


